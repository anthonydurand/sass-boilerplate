// This fluid grid system based of the idea of the great OOCSS grid system.
// The system support cutter spaces. For these you have to use the ".cell"
// selector as a sub child of ".row".
// Example:
// .row
//   .col-1-2
//     .cell
//   .col-1-4
//     .cell
//   .col-1-4
//     .cell

$gridGutterWidth: 20px !default;
$gridColumnName: "col" !default;

// @link https://gist.github.com/91663 by @chriseppstein
// @param $n integer Number of current choise
// @param $m integer Number of maximum columns
@function percentageColumnWidth($n, $m) {
  @if $n == $m {
    @return 100%;
  }
  @else {
    @return percentage($n / $m);
  }
}
// Define the whole grid system environment.
// @param [string] Name of the selector classes (default $gridColumnName)
@mixin gridBuilder($name: $gridColumnName) {
  .row,
  .line {
    @extend .clearfix;
  }
  .#{$name} {
    display: inline;
    float: left;
  }
  .row { margin-left: -$gridGutterWidth; }
  .#{$name}-1-1 { width: percentageColumnWidth(1, 1); }
  $double: false;
  @for $m from 1 through 5 {
    @for $n from 1 to $m {
      $width: percentageColumnWidth($n, $m);

      @if $width != $double {
        .#{$name}-#{$n}-#{$m} {
          width: $width;
        }
      }
      @if $width == 50% {
        $double: 50%;
      }
    }
  }
  // @section boxsizing solution
  .no-boxsizing .row .cell { margin-left: $gridGutterWidth; }
  .boxsizing .row > .col {
    @include box-sizing(border-box);
    padding-left: $gridGutterWidth;
  }
}
